@font-face {
  font-family: 'roboto';
  src: url(data:application/x-font-ttf;charset=utf-8;base64,/*robotoFont*/);
}

* {
  position: relative;
  box-sizing: border-box;
}

:root {
  --hue: 200;
  --highlight: hsl(var(--hue), 80%, 80%);
  --light:     hsl(var(--hue), 80%, 60%);
  --main:      hsl(var(--hue), 50%, 40%);
  --dark:      hsl(var(--hue), 50%, 20%);
  --red:       hsl(0, 60%, 60%);
  --green:     hsl(120, 40%, 40%);
  --neutral: #EEEEEE;
  --gutter: 1rem;
  --content-max: 60rem;
  --font: 'roboto', monospace;
  font-family: var(--font);
  font-size: 16px;
  line-height: 1.5;
  color: var(--dark);
  background: var(--neutral);
}

:first-child {
  margin-block-start: 0 !important;
}

:last-child {
  margin-block-end: 0 !important;
}

::selection {
  color: white;
  background: var(--dark);
}

/* Page Layout */

html, body {
  margin: 0;
  padding: 0;
}

body {
  display: grid;
  grid-template-rows: auto 1fr auto;
  min-height: 100vh;
  min-height: 100svh;
  color: white;
  background: var(--main);
}

header {
  position: sticky;
  top: 0;
  z-index: 1;
  padding: 0.5rem 0;
  background: var(--main);
}

main {
  display: flex;
  flex-direction: column;
  color: var(--dark);
  background: var(--light);
}

main > :last-child {
  flex: 1;
}

section {
  padding: 2rem 0;
}

footer {
  padding: 4rem 0 2rem 0;
}

header,
section,
footer {
  display: grid;
  row-gap: var(--gutter);
  grid-template-columns: minmax(var(--gutter), 1fr) [content-start] minmax(0, var(--limit)) [content-end] minmax(var(--gutter), 1fr);
  grid-auto-rows: min-content;
}

header > *,
section > *,
footer > * {
  grid-column: content;
  margin-block: 0;
}

/* Element Styles */

h1, h2, h3, p, li, th, td, a, summary {
  line-height: 1.5;
}

hgroup, h1, h2, h3, p, ul, ol {
  margin-top: var(--gutter);
  margin-bottom: var(--gutter);
}

hgroup > * {
  margin: 0;
}

h1, .text-h1 {
  font-size: 3.5rem;
  font-weight: bold;
}

h2, .text-h2 {
  font-size: 2.5rem;
  font-weight: bold;
}

h3, .text-h3 {
  font-size: 1.75rem;
  font-weight: normal;
}

strong {
  font-weight: bold;
}

a {
  color: inherit;
  text-decoration: underline;
  text-decoration-thickness: 1px;
}

h1 a:not(:hover), .text-h1 a:not(:hover), a.text-h1:not(:hover),
h2 a:not(:hover), .text-h2 a:not(:hover), a.text-h2:not(:hover),
h3 a:not(:hover), .text-h3 a:not(:hover), a.text-h3:not(:hover),
nav a:not(:hover) {
  text-decoration: none;
}

img, .no-select {
  -webkit-user-select: none; /* Safari */
  -ms-user-select: none; /* IE 10 and IE 11 */
  user-select: none; /* Standard syntax */
}

button {
  padding: 0.25rem 0.5rem;
  font-family: var(--font);
  font-size: 1rem;
  line-height: 1.5;
  color: var(--dark);
  background: white;
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
}

button:hover {
  color: white;
  background: var(--main);
}

ul, ol {
  list-style-position: inside;
  padding: 0;
}

hr {
  width: 100%;
  height: 2px;
  padding: 0;
  border: none;
  outline: none;
  background: var(--main);
}

figure {
  width: 100%;
  margin: 1rem auto;
  overflow-x: auto;
}

table {
  min-width: 100%;
  border-collapse: collapse;
  color: var(--dark);
  background: white;
  border: 1px solid black;
}

th, td {
  padding: 0.5rem;
  vertical-align: middle;
  border: 1px solid black;
  text-align: inherit;
}

th {
  font-weight: bold;
  color: white;
  background: var(--main);
}

th.minimize, td.minimize {
  width: 1%;
}

th.maximize, td.maximize {
  width: 100%;
}

details {
  margin: 1rem auto;
}

details summary {
  margin: 1rem auto;
  cursor: pointer;
}

/* Utility Classes */

.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }
.text-upper { text-transform: uppercase; }
.text-white { color: white; }
.text-main { color: var(--main); }
.no-wrap { white-space: nowrap; }

.x-limit {
  width: min(100%, var(--content-max));
  margin-inline: auto;
}

.bg-white {
  color: var(--dark);
  background: white;
}

.bg-light {
  color: var(--dark);
  background: var(--light);
}

.bg-main {
  color: white;
  background: var(--main);
}

.bg-dark {
  color: white;
  background: var(--dark);
}

.ratio-1-1 { aspect-ratio: 1 / 1; }
.ratio-2-1 { aspect-ratio: 2 / 1; }

/* Component Classes */

.profile-image {
  display: block;
  margin: 1rem auto;
  width: 8rem;
  height: auto;
  aspect-ratio: 1 / 1;
  background: white;
  border-radius: 50%;
}

.profile-image.grow {
  width: 100%;
  max-width: 16rem;
}

.icon-2 {
  display: block;
  height: auto;
  width: 2rem;
}

.icon-4 {
  display: block;
  height: auto;
  width: 4rem;
}

.card {
  margin: 1rem 0;
  padding: 1rem;
  border-radius: 0.5rem;
  color: var(--dark);
  background: white;
}

.target {
  display: grid;
  grid-template-columns: auto auto auto;
  grid-template-rows: auto auto auto;
  justify-items: center;
  align-items: center;
  justify-content: center;
  align-content: center;
  gap: 1rem;
  padding: 1rem;
  text-align: center;
  font-weight: bold;
  background: white;
  border-radius: 0.5rem;
  --ring: 2rem;
}

.target .dot {
  width: 1.5rem;
  border-radius: 100%;
  aspect-ratio: 1 / 1;
  background: var(--green);
}

.target .label {
  grid-column: 2;
  line-height: 1.5;
}

.target .ring {
  display: grid;
  justify-items: center;
  align-items: center;
  justify-content: stretch;
  align-content: stretch;
  border-radius: 100%;
  aspect-ratio: 1 / 1;
}

.ring.outer {
  grid-column: 1 / 4;
  grid-template-columns: var(--ring) 1fr var(--ring);
  grid-template-rows: var(--ring) 1fr var(--ring);
  color: white;
  background: var(--light);
}

.ring.inner {
  grid-column: 2;
  grid-template-columns: var(--ring) 1fr var(--ring);
  grid-template-rows: var(--ring) 1fr var(--ring);
  background: var(--red);
}

.ring.center {
  grid-column: 2;
  grid-template-columns: var(--ring) auto var(--ring);
  grid-template-rows: var(--ring) auto var(--ring);
  background: var(--dark);
}

.ring.center > .label {
  min-width: var(--ring);
}

.target .ring, .ring.center > .label {
  grid-row: 2;
}

.ring:not(.center) > .label {
  grid-row: 3;
}

/* CSS Grid */

.grid {
  display: grid;
  column-gap: var(--gutter);
  row-gap: var(--gutter);
  justify-items: stretch; /* cell content X */
  align-items: start; /* cell content Y */
  justify-content: stretch; /* column spacing X */
  align-content: start; /* row spacing Y */
}

.grid.columns-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
.grid.columns-fill-auto { grid-template-columns: 1fr auto; }
.grid.columns-auto-fill { grid-template-columns: auto 1fr; }

.grid.columns-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
.grid.columns-fill-auto-auto { grid-template-columns: 1fr auto auto; }

.grid.no-gap, .grid.no-gap-x { column-gap: 0; }
.grid.no-gap, .grid.no-gap-y { row-gap: 0; }

.grid.items-x-center { justify-items: center; }
.grid.items-y-center { align-items: center; }

.grid.items-x-stretch { justify-items: stretch; }
.grid.items-y-stretch { align-items: stretch; }

.grid:not(.stack) > * { margin: 0 !important; }

.grid > .span-2 { grid-column: span 2; }
.grid > .span-3 { grid-column: span 3; }

.grid > .shift { grid-column-start: 2; }
.grid > .shift-2 { grid-column-start: 3; }

.grid.sub {
  grid-template-columns: subgrid;
  grid-column: 1 / -1;
  justify-items: inherit;
  align-items: inherit;
  justify-content: inherit;
  align-content: inherit;
}

/* Small Screens */
@media screen and (max-width: 800px) {
  .grid.stack {
    display: block;
  }

  .screen-lg {
    display: none !important;
  }
}

/* Large Screens */
@media screen and (min-width: 801px) {
  .grid > * {
    margin: 0 !important;
  }

  .screen-sm {
    display: none !important;
  }
}